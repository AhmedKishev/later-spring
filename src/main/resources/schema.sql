DROP TABLE IF EXISTS users,items,tags,item_notes

-- Создание таблицы users
-- Создание таблицы users (если ещё не создана)
CREATE TABLE IF NOT EXISTS public.users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255),
    email VARCHAR(255),
    registration_date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    state VARCHAR(20)
);

-- Создание таблицы items с полным соответствием модели Item
CREATE TABLE IF NOT EXISTS public.items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    url VARCHAR(512),
    resolved_url VARCHAR(512),
    mime_type VARCHAR(255),
    title VARCHAR(512),
    has_image BOOLEAN DEFAULT FALSE,
    has_video BOOLEAN DEFAULT FALSE,
    unread BOOLEAN DEFAULT TRUE,
    date_resolved TIMESTAMP WITH TIME ZONE,
    CONSTRAINT fk_item_user FOREIGN KEY (user_id) REFERENCES public.users (id) ON DELETE CASCADE
);

-- Создание таблицы tags для ElementCollection
CREATE TABLE IF NOT EXISTS public.tags (
    item_id BIGINT NOT NULL,
    name VARCHAR(255) NOT NULL,
    PRIMARY KEY (item_id, name),
    CONSTRAINT fk_tags_item FOREIGN KEY (item_id) REFERENCES public.items (id) ON DELETE CASCADE
);

-- Индексы для улучшения производительности
-- Создание таблицы item_notes
CREATE TABLE IF NOT EXISTS public.item_notes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_id BIGINT NOT NULL,
    text TEXT,
    note_date TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_note_item FOREIGN KEY (item_id) REFERENCES public.items (id) ON DELETE CASCADE
);

CREATE INDEX IF NOT EXISTS idx_items_user_id ON public.items (user_id);
CREATE INDEX IF NOT EXISTS idx_items_url ON public.items (url);
CREATE INDEX IF NOT EXISTS idx_tags_item_id ON public.tags (item_id);